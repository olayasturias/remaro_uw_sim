<?xml version="1.0"?>
<launch>
  <arg name="paused" default="false"/>
  <arg name="gui" default="true"/>

  <arg name="model" default="$(find bluerov_ros_playground)/model/BlueRov2.urdf.xacro"/>
  <arg name="namespace" default="BlueRov2"/>
  <arg name="use_ned_frame" default="false"/>
    <!-- Vehicle's initial pose -->
  <arg name="x" default="0"/>
  <arg name="y" default="10"/>
  <arg name="z" default="-59"/>
  <arg name="roll" default="3.14"/>
  <arg name="pitch" default="0.0"/>
  <arg name="yaw" default="0.0"/>
  
  <arg name="joy_dev" default="/dev/input/js0"/>
  <arg name="log_output" default="log"/>


  <!-- launch uuv simulator world

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find uuv_gazebo_worlds)/worlds/subsea_bop_panel.world"/>
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="$(arg gui)"/>
    <arg name="headless" value="false"/>
    <arg name="debug" value="false"/>
    <arg name="verbose" value="true" />
  </include>-->

    <!-- Launch Gazebo with underwater world -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="paused" value="true"/>
        <arg name="world_name" value="$(find uuv_gazebo_worlds)/worlds/subsea_bop_panel.world "/>
    </include>
    
    <group ns="$(arg namespace)">
        <!-- spawn in Gazebo with GUI -->
        <param name="robot_description" command="$(find xacro)/xacro --inorder $(arg model)"/>
        <node name="spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" args="-urdf -model $(arg namespace) -param /$(arg namespace)/robot_description -x 0 -y 10 -z -59 -R 3.14927 -P 0 -Y 0"/>
        <rosparam file="$(find bluerov_ros_playground)/config/bluerov2_thrusters.yaml" command="load"/>



    <!-- A joint state publisher plugin already is started with the model, no need to use the default joint state publisher -->
    <!-- Publish robot model for ROS -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen">
      <param name="robot_description" value="/$(arg namespace)/robot_description" />
    </node>
  </group>

  <!-- Publish state and tf for in relation to the world frame -->
  <include file="$(find uuv_assistants)/launch/message_to_tf.launch">
    	<arg name="namespace" value="$(arg namespace)"/>
  </include>


    <!-- start the joystick driver -->
    <node respawn="true" pkg="joy" type="joy_node" name="joy_node">
        <param name="dev" type="string" value="$(arg joy_dev)"/>
    </node>
    
    <!-- start the image_view -->
    <node respawn="true" pkg="image_view" type="image_view" name="image_view">
        <remap from="image" to="/BlueRov2/camera/image_raw" />
    </node>

    <node pkg="bluerov_ros_playground" type="gazebo_teleop.py" name="gazebo_teleop" output="$(arg log_output)"/>




</launch>